apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: beaconchain-explorer
  labels:
    app: multinet
    tier: explorer
spec:
  replicas: 1
  serviceName: beaconchain-explorer
  selector:
    matchLabels:
      tier: explorer
  template:
    metadata:
      labels:
        tier: explorer
    spec:
      containers:
        - name: explorer
          image: ubuntu
          imagePullPolicy: IfNotPresent
          command: [ "bash", "-c"]
          ports:
            - containerPort: 3333
              protocol: TCP
          args:
            - echo $STARTUP_SCRIPT | base64 -d > startup.sh;
              chmod +x ./startup.sh;
              ./startup.sh;
          # inject environment variables
          env:
            - name: MULTINET_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MULTINET_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: STARTUP_SCRIPT
              value: {{ .Files.Get "run_beaconchain-explorer.sh" | b64enc }}
          volumeMounts:
            - mountPath: /explorer/config1.yml
              name: beaconchain-explorer-cfgmap
              subPath: payload
          resources:
            requests:
              memory: "400Mi"
              cpu: "50m"
            limits:
              memory: "600Mi"
              cpu: "100m"

        - name: db
          image: postgres:12.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: "db"

            - name: POSTGRES_USER
              value: "postgres"

            - name: POSTGRES_PASSWORD
              value: "pass"

            - name: PGDATA
              value: "/postgresql/data"

      volumes:
        - name: beaconchain-explorer-cfgmap
          configMap:
            name: beaconchain-explorer-cfg
